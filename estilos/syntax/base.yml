# BASE UI
ColorColumn: '- Grey32'
Conceal: ''
Cursor: ''
CursorIM: ''
CursorColumn: '- Grey32'
CursorLine: '- Grey32'
CursorLineNr: 'SteelBlue1'
Directory: 'LightSkyBlue1'
DiffAdd: '- GreyGreen27'
DiffChange: '- GreyBlue30'
DiffDelete: 'Indianred1 GreyRed23'
DiffText: ''
ErrorMsg: 'Indianred1'
VertSplit: '- Grey28'
Folded: 'Grey66 Grey20'
FoldColumn: 'Grey66 Grey20'
SignColumn: 'Grey99 Grey28'
IncSearch: 'White Black'
LineNr: 'Grey44'
MatchParen: 'Indianred1'
ModeMsg: ''
MoreMsg: ''
NonText: 'Grey44'
Normal: 'Leaf Grey28'
PMenu: 'GreyDA GreyBlue30'
PMenuSel: 'GreyBlue30 Khaki3'
PmenuSbar: 'GreyBlue30 Khaki3'
PmenuThumb: 'GreyBlue30 Khaki3'
Question: 'Khaki3'
Search: 'White - r'
SpecialKey: 'Grey44'
SpellBad: 'Indianred1'
SpellLocal: 'Sawdust'
SpellCap: 'SandyBrown'
SpellRare: 'SteelBlue1'
StatusLine: 'Grey1D Grey66'
StatusLineNC: 'Grey99 Grey44'
TabLine: 'Grey99 Grey44'
TabLineFill: '- Grey44'
TabLineSel: 'Khaki3'
Title: 'LightSkyBlue1'
Visual: '- GreyBlue23'
VisualNOS: '- GreyBlue23'
WarningMsg: 'Indianred1'
WildMenu: 'Grey28 Khaki3'
# BASE SYNTAX
Comment: 'Bracken'
Constant: 'DeepSkyBlue3'
String: 'Stone' # Constant
Character: 'Grass' # Constant
Boolean: '' # Constant
Number: '' # Constant
Float: '' # Constant
Identifier: ''
Function: 'LightSkyBlue1' # Identifier
Statement: 'Stone'  # assign etc
Conditional: 'Grass' # Statement
Repeat: 'Grass' # Statement
Label: 'Sawdust' # Statement
Operator: 'Khaki3' # Statement
Keyword: '' # Statement
Exception: '' # Statement
PreProc: ''
Include: '' # PreProc
Define: 'LightBracken' # PreProc
Macro: '' # PreProc
PreCondit: '' # PreProc
Type: 'Grass'
StorageClass: '' # Type
Structure: '' # Type
Typedef: '' # Type
Special: 'Sawdust'
SpecialChar: '' # Special
Tag: '' # Special
Delimiter: '' # Special
SpecialComment: '' # Special
Debug: '' # Special
Underlined: ''
Ignore: ''
Error: ''
Todo: 'Indianred1'
# SYSTEMVERILOG
verilogCharacter: ''  # Character
verilogConditional: ''  # Conditional
verilogRepeat: ''  # Repeat
verilogString: ''  # String
verilogTodo: ''  # Todo
verilogComment: ''  # Comment
verilogConstant: ''  # Constant
verilogLabel: ''  # Tag
verilogNumber: ''  # Number
verilogOperator: ''  # Special
verilogPrototype: ''  # Statement
verilogStatement: ''  # Statement
verilogGlobal: ''  # Define
verilogDirective: ''  # SpecialComment
verilogEscape: ''  # Special
verilogMethod: ''  # Function
verilogTypeDef: ''  # TypeDef
verilogObject: ''  # Type
